This document will explain how to build and install the Pika library, interpreter and modules from source using the CMake build system.

---------------------------------------------------
** First Get CMake

(If CMake version 2.6 or greater is already installed go to step 1.)
Go to the CMake home page at http://www.cmake.org and follow the instructions for installing CMake for your platform. If you are using a *nix platform if might be preferable to use the system's package manager. On Windows you will probably want to use the installer. Under Mac OS X you can use fink, Mac Ports or the installer.

** Now open up the terminal and navigate to the project's root directory.

At the terminal type: 
note: (don't type the > character)

> mkdir build && cd build
> cmake ../../pika -DPIKA_NO_MODULES=YES
> make
> sudo make install

The first line creates a directory to house all the build files. You can run cmake from the root directory if you prefer but the method described above will keep the source directory clean.

The second line invokes CMake at the projects root directory. You define constants for CMake using the -D option (for example '-DPCRE_PATH=/usr/include/'). The option specified, PIKA_NO_MODULES, will exclude the external modules from being built. CMake can also create project files for IDEs such as Xcode, Eclipse and Visual Studio by using the -G option (i.e. '-G Xcode' creates an Xcode project). Typing cmake --help will list all generators supported on your platform.

The third line builds Pika. If every thing looks OK you can move on to the next step.

The last line will install it to a system appropriate location. The CMAKE_INSTALL_PREFIX option can be used to specify a different location. You might want to point it to your user directory if you do not have administrator privileges.

Module Dependencies
--------------------
re - Depends on PCRE, the project's home page is http://www.pcre.org/. I use PCRE version 8.10, so any version compatible with that release should work. 

curses - Depends on curses,ncurses. On Mac and Linux the default installed version will usually work. Unless you use cygwin no Windows backend is available.

