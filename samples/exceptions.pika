begin
    function foo()
        raise new Error("foo failed")
    # Functions can have a finalizer
    finally
        say "finally: exiting foo"
    end

    function bar(stringerror)
        raise "string error" if stringerror
        raise new Error("bar failed")
    finally
        say "finally: exiting bar"
    end
        
    try
        say "try #1: foo()"
        foo()
    catch e
        say "caught #1: " @ e.type @@ e
    # Try/catch blocks can have a finalizer.
    finally
        say "finally: exiting handler #1"
    end
    
    try
        stringerror = true # Change to false to use the second catch block.
        say "try #2: bar()"
        bar(stringerror)    
    catch estr is String
        say "caught #2a: " @ estr.type @@ estr
    catch e
        say "caught #2b: " @ e.type @@ e
    finally
        say "finally: exiting handler #2"
    end
    
# Begin blocks, and other types of blocks, can have a finalizer.
finally 
    say "finally: exiting begin block"
end
