(* Functions *)

# Function declaration.

function foo(a, b)
    say "foo: " @ a @@ b
end

# Call a function.

foo(1, 2)

# You can omit () if the first argument is on the same line as the function.

foo 3, 4 # OK: all arguments are on same line
foo 5,   # OK: because of ,
    6


# Functions can be nested. When local variables are accessed a Closure is formed.
function outer(a)
    function inner(b)
        # Local variables of parent scopes can be accessed by inner scopes including functions.
        return a + b
    end
    # Since functions are 1st class primitives they can passed to and returned from other functions.
    return inner 
end

x = outer(3)
print x(3)

# Function can also have variable arguments

function bar(a, b, ...c)
    print c
end

bar(1,2,3,4,5)
bar(1,3)

# You can also set default values for arguments
function bazz(a = "hello", b = "world!")
    print a @', '@ b
end

bazz()
bazz('goodbye')
bazz('hello', 'universe!!')