(* variables.pika *)

#==============================================================================
# Identifiers 
#------------------------------------------------------------------------------
# [a-zA-Z_][a-zA-Z0-9]*[!?]? 
#============================================================================
(*
  x
  foo_bar 
  Object
  __foo__
  f23
  valid?
  set!
*)

#------------------------------------------------------------------------------
# Other identifier can be enclosed with backticks. 
#------------------------------------------------------------------------------
`id with spaces` = 4
print `id with spaces`

#==============================================================================
# Variables
#------------------------------------------------------------------------------
# By default variables are local. Other blocks have other rules though.
# -----------------------
# Block           Scope
# -----------------------
# class           global
# package         global
# function        local
# begin           local
# while           local
# for             local
# loop            local
# try             local
# catch           local
# finally         local
# if/else/elseif  local
# using           member
#==============================================================================

x = 4
print x

x, y = 4, 5
print x, y

#==============================================================================
# Storage Specifiers
#------------------------------------------------------------------------------
# local - Local storage, stored on the stack.
# global - Global storage, stored in the scope's package.
# member - Instance variable, stored in the current self object.
#==============================================================================

#------------------------------------------------------------------------------
# You can specify the storage explicitly for variable declarations:
#------------------------------------------------------------------------------

local a = 3          # locals
global a, b, c = 1, 2, 3 # global variables

using Object.new()
  (* member's can not be set unless there is a self object.
  * That is why we are in a using block. *)
  member b = 3
end

#------------------------------------------------------------------------------
# You don't have to assign a value, but the variable doesn't exist until you do.
# That is unless the variable is a local variable. Uninitialized locals are set
# to null by default.
#------------------------------------------------------------------------------

local b       
global readVal        
member j        # It OK to declare a member here since it won't be written to.

#------------------------------------------------------------------------------
# Storage specifiers can be extented to other declarations.
#------------------------------------------------------------------------------

local function fn()
end

local class A
end
